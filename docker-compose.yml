version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: osoul_postgres
    environment:
      POSTGRES_DB: osoul_reporting
      POSTGRES_USER: osoul_user
      POSTGRES_PASSWORD: osoul_password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - osoul_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U osoul_user -d osoul_reporting"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: osoul_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://osoul_user:osoul_password123@postgres:5432/osoul_reporting
      JWT_SECRET: your_secure_jwt_secret_here_change_in_production
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - osoul_network
    volumes:
      - ./backend/logs:/app/logs
    command: >
      sh -c "
        npm run db:migrate &&
        npm run db:seed &&
        npm start
      "

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:5000/api/v1
    container_name: osoul_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - osoul_network

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: osoul_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@osoul.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - osoul_network

networks:
  osoul_network:
    driver: bridge

volumes:
  postgres_data: